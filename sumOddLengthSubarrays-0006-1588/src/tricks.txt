我用的方法是动态规划 O(n^2)，每次都是上一个长度+右边两个数，比如长度为5的是，上一次长度为3的一个加上右边两个，长度为3的是上一个长度为1的加右边两个。
一个更好的方法 0(n)：
事实上，我们可以统计任意只 arr[i] 在奇数子数组的出现次数。
对于原数组的任意位置 ii 而言，其左边共有 ii 个数，右边共有n−i−1 个数。
arr[i]作为某个奇数子数组的成员的充要条件为：其所在奇数子数组左右两边元素个数奇偶性相同。
于是问题转换为如何求得arr[i]在原数组中左边连续一段元素个为奇数的方案数和arr[i]在原数组右边连续一段元素个数为偶数的方案数」。
由于我们已经知道arr[i]左边共有 ii 个数，右边共有n−i−1 个数，因此可以算得组合数：
位置 ii 左边奇数个数的方案数为(i+1)/2，右边奇数个数的方案数为(n−i)/2；
位置 ii 右边偶数（非零）个数的方案数为i/2，右边偶数（非零）个数的方案数为(n−i−1)/2；
考虑左右两边不选也属于合法的偶数个数方案数，因此在上述分析基础上对偶数方案数自增 11。
至此，我们得到了位置 ii 左右奇数和偶数的方案数个数，根据「如果arr[i] 位于奇数子数组中，其左右两边元素个数奇偶性相同」以及「乘法原理」，
我们知道arr[i]同出现在多少个奇数子数组中，再乘上arr[i] 即是arr[i]对答案的贡献。
